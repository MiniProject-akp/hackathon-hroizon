static/style.css 
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
}

h1 {
    text-align: center;
    margin-top: 20px;
}

a {
    text-decoration: none;
    color: #007BFF;
    display: inline-block;
    margin: 20px 0;
}

form {
    width: 300px;
    margin: 50px auto;
    padding: 20px;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

label {
    display: block;
    margin-bottom: 10px;
}

input[type="text"],
button {
    width: 100%;
    padding: 10px;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

button {
    background-color: #007BFF;
    color: #fff;
    border: none;
    cursor: pointer;
}

button:hover {
    background-color: #0056b3;
}

.event-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    padding: 20px;
}

.event-card {
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    border-radius: 5px;
    width: 300px;
    margin: 20px;
    padding: 20px;
    text-align: center;
}

.event-card h2 {
    margin-top: 0;
}

.event-card p {
    margin: 10px 0;
}

.btn {
    display: inline-block;
    padding: 10px 20px;
    margin-top: 10px;
    color: #fff;
    background-color: #007BFF;
    border: none;
    border-radius: 5px;
    text-decoration: none;
    cursor: pointer;
}

.btn:hover {
    background-color: #0056b3;
}

#chat-box {
    width: 100%;
    max-width: 600px;
    margin: 50px auto;
    padding: 20px;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

#messages {
    list-style-type: none;
    padding: 0;
}

#messages li {
    padding: 10px;
    border-bottom: 1px solid #ccc;
}

input#message {
    width: calc(100% - 60px);
    padding: 10px;
    margin-right: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

button#send {
    padding: 10px 20px;
    background-color: #007BFF;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

button#send:hover {
    background-color: #0056b3;
}

templates/chat.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Room for {{ event.name }}</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
    <script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <h1>Chat Room for {{ event.name }}</h1>
    <div id="chat-box">
        <ul id="messages"></ul>
    </div>
    <input id="message" autocomplete="off" /><button id="send">Send</button>
    <script>
        var socket = io();
        var room = "{{ event.id }}";
        var username = prompt("Enter your name");

        socket.emit('join', {username: username, room: room});

        socket.on('message', function(msg){
            $('#messages').append($('<li>').text(msg));
        });

        $('#send').click(function(){
            socket.emit('message', {message: $('#message').val(), room: room});
            $('#message').val('');
        });
    </script>
</body>
</html>

templates/event_detail.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ event.name }} Details</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
</head>
<body>
    <h1>{{ event.name }}</h1>
    <p><strong>Address:</strong> {{ event.address }}</p>
    <p><strong>Time:</strong> {{ event.time }}</p>
    <p><strong>Domain:</strong> {{ event.domain }}</p>
    <h2>Registrations</h2>
    <ul>
        {% for registration in registrations %}
        <li>{{ registration.name }}{% if registration.team_members %} (Team Members: {{ registration.team_members }}){% endif %}</li>
        {% endfor %}
    </ul>
    <a href="{{ url_for('index') }}">Back to Events</a>
    <a href="{{ url_for('chat', event_id=event.id) }}" class="btn">Go to Chat Room</a>
</body>
</html>

teamplates/index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event List</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
</head>
<body>
    <h1>Events</h1>
    <a href="{{ url_for('post_event') }}">Post a New Event</a>
    <div class="event-container">
        {% for event in events %}
        <div class="event-card">
            <h2>{{ event.name }}</h2>
            <p><strong>Address:</strong> {{ event.address }}</p>
            <p><strong>Time:</strong> {{ event.time }}</p>
            <p><strong>Domain:</strong> {{ event.domain }}</p>
            <a href="{{ url_for('register', event_id=event.id) }}" class="btn">Register</a>
            <a href="{{ url_for('event_detail', event_id=event.id) }}" class="btn">Go to Event</a>
        </div>
        {% endfor %}
    </div>
</body>
</html>

templates/post_event.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Post Event</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
</head>
<body>
    <h1>Post a New Event</h1>
    <form method="POST">
        <label for="name">Event Name:</label>
        <input type="text" id="name" name="name" required>
        <label for="address">Address:</label>
        <input type="text" id="address" name="address" required>
        <label for="time">Time:</label>
        <input type="text" id="time" name="time" required>
        <label for="domain">Domain:</label>
        <input type="text" id="domain" name="domain" required>
        <button type="submit">Post Event</button>
    </form>
</body>
</html>

templates/register.html
 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register for Event</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
</head>
<body>
    <h1>Register for Event</h1>
    <form method="POST">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required>
        <label for="phone">Phone:</label>
        <input type="text" id="phone" name="phone" required>
        <label for="team_members">Team Members (comma separated, max 5):</label>
        <input type="text" id="team_members" name="team_members">
        <button type="submit">Register</button>
    </form>
</body>
</html>

app.py
from flask import Flask, render_template, request, redirect, url_for, session
from flask_sqlalchemy import SQLAlchemy
from flask_socketio import SocketIO, join_room, leave_room, send

app = Flask(__name__)
app.config['SECRET_KEY'] = 'secret!'
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///events.db'
db = SQLAlchemy(app)
socketio = SocketIO(app)

class Event(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    address = db.Column(db.String(200), nullable=False)
    time = db.Column(db.String(50), nullable=False)
    domain = db.Column(db.String(100), nullable=False)
    registrations = db.relationship('Registration', backref='event', lazy=True)

class Registration(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    event_id = db.Column(db.Integer, db.ForeignKey('event.id'), nullable=False)
    name = db.Column(db.String(100), nullable=False)
    phone = db.Column(db.String(20), nullable=False)
    team_members = db.Column(db.String(500), nullable=True)

@app.route('/')
def index():
    events = Event.query.all()
    return render_template('index.html', events=events)

@app.route('/post_event', methods=['GET', 'POST'])
def post_event():
    if request.method == 'POST':
        name = request.form['name']
        address = request.form['address']
        time = request.form['time']
        domain = request.form['domain']
        new_event = Event(name=name, address=address, time=time, domain=domain)
        db.session.add(new_event)
        db.session.commit()
        return redirect(url_for('index'))
    return render_template('post_event.html')

@app.route('/register/<int:event_id>', methods=['GET', 'POST'])
def register(event_id):
    if request.method == 'POST':
        name = request.form['name']
        phone = request.form['phone']
        team_members = request.form['team_members']
        new_registration = Registration(event_id=event_id, name=name, phone=phone, team_members=team_members)
        db.session.add(new_registration)
        db.session.commit()
        return redirect(url_for('event_detail', event_id=event_id))
    return render_template('register.html', event_id=event_id)

@app.route('/event/<int:event_id>')
def event_detail(event_id):
    event = Event.query.get_or_404(event_id)
    registrations = Registration.query.filter_by(event_id=event_id).all()
    return render_template('event_detail.html', event=event, registrations=registrations)

@app.route('/chat/<int:event_id>')
def chat(event_id):
    event = Event.query.get_or_404(event_id)
    registrations = Registration.query.filter_by(event_id=event_id).all()
    return render_template('chat.html', event=event, registrations=registrations)

@socketio.on('join')
def handle_join(data):
    username = data['username']
    room = data['room']
    join_room(room)
    send(f'{username} has joined the room.', room=room)

@socketio.on('message')
def handle_message(data):
    send(data['message'], room=data['room'])

if __name__ == '__main__':
    db.create_all()
    socketio.run(app, debug=True)

fields arent same ?okay still vho connect toh hona chaiye na ?